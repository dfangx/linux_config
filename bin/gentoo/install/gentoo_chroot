#!/bin/bash

home_dir="/home/gentoo/cyrusng"
boot="/dev/sda2"

function begin_chroot {
    /usr/sbin/env-update
    source /etc/profile 
    export PS1="(chroot) ${PS1}"
    mkdir /boot
    mount "$boot" /boot
}

function sys_config {
    timezone="Canada/Eastern"
    kernel="sys-kernel/gentoo-sources"

    emerge --sync
    eselect news list
    eselect news read

    while [ -z $profile_num ] 
    do
	    eselect profile list
	    echo "enter in the profile number"
	    read profile_num
    done

    eselect profile set "$profile_num"
    emerge --ask --verbose --update --deep --newuse @world
    echo "$timezone" > /etc/timezone
    emerge --config sys-libs/timezone-data
    echo "en_CA ISO-8859-1" >> /etc/locale.gen
    echo "en_CA.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen

    while [ -z $locale_num ]
    do
	    eselect locale list
	    echo "enter in the locale number"
	    read locale_num
    done

    eselect locale set "$locale_num"
    env-update && source /etc/profile && export PS1="(chroot) $PS1"
    echo "Enter root password"
    passwd
}

function kernel_config {
    linux_src_dir="/usr/src/linux"
    linux_ver="4.20.10"
    cd "$linux_src_dir"
    cp -v "$home_dir"/.config/linux/config-"$linux_ver" ./.config
    make menuconfig
    make -j3 && make -j3 modules_install
    make install
}

function mount_config {	
    cp "$home_dir"/.config/linux/fstab /etc/fstab
    nano /etc/fstab
}

function install_pkg {
    packages="$home_dir"/bin/gentoo_install/world
    readarray -t  packages < $packages
    for pkg in "${packages[@]}"; do
	    emerge -v "$pkg"
    done
    emerge @preserved-rebuild
}

function network_config {
    nano /etc/conf.d/hostname
    nano /etc/hosts
    cp "$home_dir"/.config/wpa_supplicant/wpa_supplicant.conf /etc/wpa_supplicant/
    nano /etc/wpa_supplicant/wpa_supplicant.conf
    cd /etc/init.d
    ln -s net.lo net.wlp2s0
    rc-update add net.wlp2s0 default
}

function add_user {
    useradd -Md /home/gentoo/cyrusng cyrusng
    gpasswd -a cyrusng wheel
    gpasswd -a cyrusng audio
    passwd cyrusng
}

begin_chroot

while [ "$config" != 0 ]
do
    echo [0] exit
    echo [1] system config
    echo [2] kernel config
    echo [3] install packages 
    echo [4] network config
    echo [5] mount config
    echo [6] add user
    read config
    case "$config" in
    	1)
    		sys_config
    		;;
    	2)
    		kernel_config
    		;;
    	3)
    		install_pkg
    		;;
    	4)
    		network_config
    		;;
    	5)
    		mount_config
    		;;
	6)
		add_user
		;;
    	*)
    esac
done
