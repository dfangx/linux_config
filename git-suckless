#!/bin/bash

submodule_dir="./config/suckless"
repo_name="linux_config"
git_home="$(pwd)"

# Commit submodules
echo "Checking submodules for changes"
for d in "$submodule_dir"/*
do
    # Skip directory 'patches'
    if [ "$(basename $d)" == "patches" ]
    then
        continue
    fi

    cd "$d"

    echo "Checking for changes..."
    if [ -z "$(git status -s)" ]
    then
        echo "No changes in $d"
        continue
    else
        echo "Adding changes to staging area..."
        git add .
        while true
        do 
            read -p "Committing staged changes. Please enter a commit message: " m
            if [ ! -z "$m" ]
            then
                git commit -m "$m"
                echo "Staged changes in submodule $(basename $d) have been committed"
                break
            fi
        done
    fi
    cd "$git_home"
done

# Check main repository for changes
echo "Checking main repository for changes"
cd "$git_home"
if [ -z "$(git status -s)" ]
then
    echo "No changes in $d"
    continue
else
    echo "Adding changes to staging area..."
    git add .
    while true
    do 
        read -p "Committing staged changes. Please enter a commit message: " m
        if [ ! -z "$m" ]
        then
            git commit -m "$m"
            echo "Staged changes in $repo_name have been committed"
            break
        fi
    done
fi

# Push all changes to remote
echo "Pushing all changes to remote..."
git push --recurse-submodule=on-demand origin master
